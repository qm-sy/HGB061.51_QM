C51 COMPILER V9.60.7.0   TIMER                                                             11/26/2024 13:59:09 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE TIMER
OBJECT MODULE PLACED IN .\Output\timer.obj
COMPILER INVOKED BY: D:\APP\Keil_v5\C51\BIN\C51.EXE Src\timer.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Inc;D:\APP\Keil_
                    -v5\C51\INC) DEBUG OBJECTEXTEND PRINT(.\Listings\timer.lst) OBJECT(.\Output\timer.obj)

line level    source

   1          #include "STC15W4Kxx.h"
   2          #include "timer.h"
   3          #include "stdint.h"
   4          #include "key.h"
   5          
   6          bit fan_dis_bit = 0;
   7          bit temp_dis_bit = 0;
   8          bit zero_bit = 0;
   9          bit buzzer_bit = 1;
  10          bit scan_stop_bit = 1;
  11          bit scan_start_bit = 0;  
  12          bit external_24bit = 0;
  13          bit power_bit = 1;
  14          bit wind_bit = 1;
  15          bit previous_value = 0;
  16          uint8_t channel_num = 1;
  17          uint16_t tim1_t = 58400;
  18          void Tim0Init()         //11.0592Mhz  1ms
  19          {
  20   1          AUXR |= 0X80;       //修改计数速率，定时器时钟设置为12T模式
  21   1              
  22   1              TMOD &= 0XF0;       //清空TIM0需要配置的低四位（低四位是TIM0,高四位是TIM1）
  23   1      
  24   1              TH0 = 0XCD;         // TH0 高四位  TL0 低四位
  25   1              TL0 = 0XD4;         //通过计算得出的值，计算公式在下面
  26   1              
  27   1              TF0 = 0;            //清除TC0N-TF0  中断溢出标志，溢出后自动置1，CPU响应中断后置硬件清0
  28   1              TR0 = 1;            //TCON-TR0  TIM0开始计数启动
  29   1      
  30   1              ET0 = 1;            //打开IE-ET0，TIM0中断
  31   1      }
  32          
  33          
  34          void Tim1Init()         //11.0592Mhz  10ms  16位手动装载
  35          {   
  36   1              AUXR &= 0xBF;       //定时器时钟12T模式
  37   1              TMOD &= 0x0F;       //设置定时器模式
  38   1              TMOD |= 0x10;       //设置定时器模式   手动/自动开关
  39   1      }
  40          
  41          void Tim3Init(void)             //10毫秒@11.0592MHz
  42          {
  43   1              T4T3M &= 0xFD;      //定时器时钟12T模式
  44   1              T3L = 0x00;         //设置定时初始值
  45   1              T3H = 0xDC;         //设置定时初始值
  46   1              T4T3M |= 0x08;      //定时器3开始计时
  47   1          
  48   1          IE2 |= 0x20; //打开IE2-ET2，TIM3中断
  49   1      }
  50          
  51          void ET0ISR(void) interrupt 0 
  52          {
  53   1          tempchannel1 = tempchannel2 = tempchannel3 = 1;    
  54   1              /*延时移相*/
C51 COMPILER V9.60.7.0   TIMER                                                             11/26/2024 13:59:09 PAGE 2   

  55   1          TL1 = tim1_t;                               //设置定时初始值
  56   1              TH1 = tim1_t>>8;                                //设置定时初始值
  57   1      
  58   1          zero_bit = 1;
  59   1          
  60   1          TR1 = 1;                            //定时器1开始计时      
  61   1          ET1 = 1; 
  62   1      }
  63          
  64          void Tim0Isr(void) interrupt 1 
  65          {
  66   1      
  67   1      }
  68          
  69          void Tim1Isr(void) interrupt 3 
  70          {
  71   1      
  72   1          if((zero_bit == 1)&&(power_bit == 1))
  73   1          {
  74   2              switch(channel_num)
  75   2              {
  76   3                  case 1: {tempchannel1=0; tempchannel2=1; tempchannel3=1;}break;
  77   3                  case 2: {tempchannel1=1; tempchannel2=0; tempchannel3=1;}break;
  78   3                  case 3: {tempchannel1=1; tempchannel2=1; tempchannel3=0;}break;
  79   3                  case 4: {tempchannel1=0; tempchannel2=0; tempchannel3=1;}break;
  80   3                  case 5: {tempchannel1=1; tempchannel2=0; tempchannel3=0;}break;
  81   3                  case 6: {tempchannel1=0; tempchannel2=1; tempchannel3=0;}break;
  82   3                  case 7: {tempchannel1=0; tempchannel2=0; tempchannel3=0;}break;
  83   3              }
  84   2                  /*发送一个10us的脉冲*/
  85   2                  zero_bit = 0; 
  86   2      
  87   2                  TL1 = 0xF7;                         //设置定时初始值
  88   2                  TH1 = 0xFF;                         //设置定时初始值
  89   2          }
  90   1        
  91   1          else
  92   1          {
  93   2              tempchannel1 = tempchannel2 = tempchannel3 = 1;     //1-0-1的脉冲 2us
  94   2              TR1 = 0;                                //定时器关闭计时      
  95   2              ET1 = 0; 
  96   2          }
  97   1      }
  98          
  99          void Tim3Isr(void) interrupt 19 
 100          {
 101   1          static uint8_t buzzer_continue_cnt = 0;
 102   1          static uint8_t sacn_cnt = 0;
 103   1          static uint8_t key_cnt = 0;
 104   1          static uint8_t sync_delay_cnt = 0;
 105   1          static uint8_t temp_delay_cnt = 0;
 106   1          static uint8_t fan_rotate_cnt = 0;
 107   1          static uint8_t temp_rotate_cnt = 0;
 108   1          
 109   1          fan_rotate_cnt++;
 110   1          if(fan_rotate_cnt>15)
 111   1          {
 112   2              fan_dis_bit = ~fan_dis_bit;
 113   2              fan_rotate_cnt = 0;
 114   2          }
 115   1          
 116   1          temp_rotate_cnt++;
C51 COMPILER V9.60.7.0   TIMER                                                             11/26/2024 13:59:09 PAGE 3   

 117   1          if(temp_rotate_cnt>50)
 118   1          {
 119   2              temp_dis_bit = ~temp_dis_bit;
 120   2              temp_rotate_cnt = 0;
 121   2          }
 122   1          
 123   1          key_cnt++;
 124   1          if(key_cnt>5)
 125   1          {
 126   2              key_cnt=0; 
 127   2              key_val = (P0&0X0f);
 128   2          }
 129   1          
 130   1          if(sync_delay_bit == 1)
 131   1          {
 132   2              sync_delay_cnt++;
 133   2              if(sync_delay_cnt>150)
 134   2              {
 135   3                  sync_delay_bit = 0;
 136   3                  sync_delay_cnt = 0;
 137   3              }
 138   2          }
 139   1      
 140   1          if(temp_delay_bit == 1)
 141   1          {
 142   2              temp_delay_cnt++;
 143   2              if(temp_delay_cnt>150)
 144   2              {
 145   3                  temp_delay_bit = 0;
 146   3                  temp_delay_cnt = 0;
 147   3              }
 148   2          }
 149   1          
 150   1          if(buzzer_bit==0)
 151   1          {
 152   2              buzzer_continue_cnt++;
 153   2              if(buzzer_continue_cnt>10)
 154   2              {
 155   3                  buzzer_continue_cnt=0; 
 156   3                  buzzer=buzzer_bit=1;
 157   3              }
 158   2          } 
 159   1          
 160   1          if(scan_stop_bit == 1)
 161   1          {
 162   2              sacn_cnt++;
 163   2              if(sacn_cnt>10)
 164   2              {
 165   3                  scan_start_bit = 1;
 166   3                  scan_stop_bit = 0;
 167   3                  sacn_cnt = 0;
 168   3              }
 169   2          }
 170   1             
 171   1          if(P07==0)
 172   1          {
 173   2              external_24bit = 1;   //24V接入
 174   2              previous_value = 1;
 175   2          }
 176   1          if(P07==1)
 177   1          {
 178   2              external_24bit = 0;
C51 COMPILER V9.60.7.0   TIMER                                                             11/26/2024 13:59:09 PAGE 4   

 179   2              previous_value = 0;
 180   2          }
 181   1      }
 182          
 183          void power_crl(uint8_t power_num)
 184          { 
 185   1          if(power_bit==1)
 186   1          {
 187   2              ET1 = 1;
 188   2          }
 189   1          else
 190   1          {
 191   2              ET1 = 0;
 192   2          }
 193   1          
 194   1          tim1_t = power_num*64+58400;
 195   1          
 196   1      //    TL1 = tim1_t;                   //设置定时初始值
 197   1      //    TH1 = tim1_t>>8;                          //设置定时初始值
 198   1      
 199   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    422    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     10    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =     10    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
