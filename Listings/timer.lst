C51 COMPILER V9.60.7.0   TIMER                                                             01/02/2025 11:31:14 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE TIMER
OBJECT MODULE PLACED IN .\Output\timer.obj
COMPILER INVOKED BY: D:\APP\Keil_v5\C51\BIN\C51.EXE Src\timer.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Inc;D:\APP\Keil_
                    -v5\C51\INC) DEBUG OBJECTEXTEND PRINT(.\Listings\timer.lst) OBJECT(.\Output\timer.obj)

line level    source

   1          #include "STC15W4Kxx.h"
   2          #include "timer.h"
   3          #include "stdint.h"
   4          #include "key.h"
   5          
   6          bit fan_dis_bit = 0;
   7          bit temp_dis_bit = 0;
   8          bit zero_bit = 0;
   9          bit buzzer_bit = 1;
  10          bit scan_stop_bit = 1;
  11          bit scan_start_bit = 0;  
  12          bit external_24bit = 0;
  13          bit power_bit = 1;
  14          bit power_bit2 = 0;
  15          bit wind_bit = 1;
  16          bit previous_value = 0;
  17          bit delay_bit1 = 0;
  18          bit delay_bit2 = 0;
  19          bit delay_bit3 = 0;
  20          uint8_t channel_num = 1;
  21          uint16_t tim1_t = 58400;
  22          uint8_t pwm_num_cnt = 0;
  23          void Tim0Init()         //11.0592Mhz  1ms
  24          {
  25   1              AUXR &= 0x7F;                   //定时器时钟12T模式
  26   1              TMOD &= 0xF0;                   //设置定时器模式
  27   1              TL0 = 0xF4;                             //设置定时初始值
  28   1              TH0 = 0xFF;                             //设置定时初始值
  29   1              TF0 = 0;                                //清除TF0标志
  30   1              TR0 = 1;                                //定时器0开始计时
  31   1      
  32   1              ET0 = 1;            //打开IE-ET0，TIM0中断
  33   1      }
  34          
  35          
  36          void Tim1Init()         //11.0592Mhz  10ms  16位手动装载
  37          {   
  38   1              AUXR &= 0xBF;       //定时器时钟12T模式
  39   1              TMOD &= 0x0F;       //设置定时器模式
  40   1              TMOD |= 0x10;       //设置定时器模式   手动/自动开关
  41   1      }
  42          
  43          void Tim3Init(void)             //10毫秒@11.0592MHz
  44          {
  45   1              T4T3M &= 0xFD;      //定时器时钟12T模式
  46   1              T3L = 0x00;         //设置定时初始值
  47   1              T3H = 0xDC;         //设置定时初始值
  48   1              T4T3M |= 0x08;      //定时器3开始计时
  49   1          
  50   1          IE2 |= 0x20; //打开IE2-ET2，TIM3中断
  51   1      }
  52          
  53          void ET0ISR(void) interrupt 0 
  54          {
C51 COMPILER V9.60.7.0   TIMER                                                             01/02/2025 11:31:14 PAGE 2   

  55   1          tempchannel1 = tempchannel2 = tempchannel3 = 1;    
  56   1              /*延时移相*/
  57   1          TL1 = tim1_t;                               //设置定时初始值
  58   1              TH1 = tim1_t>>8;                                //设置定时初始值
  59   1      
  60   1          zero_bit = 1;
  61   1          
  62   1          TR1 = 1;                            //定时器1开始计时      
  63   1          ET1 = 1; 
  64   1      }
  65          
  66          void Tim0Isr(void) interrupt 1 
  67          {
  68   1          if( P16 == 0 )
  69   1          {
  70   2              pwm_num_cnt++;
  71   2              if(pwm_num_cnt==100)
  72   2              {
  73   3                  external_24bit = 0; 
  74   3                  previous_value = 0;
  75   3              }
  76   2          }
  77   1          if( P16 == 1 )
  78   1          {
  79   2              pwm_num_cnt = 0;
  80   2              external_24bit = 1;
  81   2              previous_value = 1;
  82   2              
  83   2          }
  84   1      
  85   1      }
  86          
  87          void Tim1Isr(void) interrupt 3 
  88          {
  89   1      
  90   1          if((zero_bit == 1)&&(power_bit == 1))
  91   1          {
  92   2              switch(channel_num)
  93   2              {
  94   3                  case 1: {tempchannel1=0; tempchannel2=1; tempchannel3=1;}break;
  95   3                  case 2: {tempchannel1=1; tempchannel2=0; tempchannel3=1;}break;
  96   3                  case 3: {tempchannel1=1; tempchannel2=1; tempchannel3=0;}break;
  97   3                  case 4: {tempchannel1=0; tempchannel2=0; tempchannel3=1;}break;
  98   3                  case 5: {tempchannel1=1; tempchannel2=0; tempchannel3=0;}break;
  99   3                  case 6: {tempchannel1=0; tempchannel2=1; tempchannel3=0;}break;
 100   3                  case 7: {tempchannel1=0; tempchannel2=0; tempchannel3=0;}break;
 101   3              }
 102   2                  /*发送一个10us的脉冲*/
 103   2                  zero_bit = 0; 
 104   2      
 105   2                  TL1 = 0xF7;                         //设置定时初始值
 106   2                  TH1 = 0xFF;                         //设置定时初始值
 107   2          }
 108   1        
 109   1          else
 110   1          {
 111   2              tempchannel1 = tempchannel2 = tempchannel3 = 1;     //1-0-1的脉冲 2us
 112   2              TR1 = 0;                                //定时器关闭计时      
 113   2              ET1 = 0; 
 114   2          }
 115   1      }
 116          
C51 COMPILER V9.60.7.0   TIMER                                                             01/02/2025 11:31:14 PAGE 3   

 117          void Tim3Isr(void) interrupt 19 
 118          {
 119   1          static uint8_t buzzer_continue_cnt = 0;
 120   1          static uint8_t sacn_cnt = 0;
 121   1          static uint8_t key_cnt = 0;
 122   1          static uint8_t sync_delay_cnt = 0;
 123   1          static uint8_t temp_delay_cnt = 0;
 124   1          static uint8_t fan_rotate_cnt = 0;
 125   1          static uint8_t temp_rotate_cnt = 0;
 126   1          static uint16_t fan_delay_cnt = 0;
 127   1          
 128   1          if((delay_bit1 == 1)&&(delay_bit2 == 1))
 129   1          {
 130   2              fan_delay_cnt++;
 131   2              if(fan_delay_cnt==1500)
 132   2              {
 133   3                  fan_delay_cnt = 0;
 134   3                  delay_bit1 = 0;
 135   3                  delay_bit2 = 0;
 136   3                  delay_bit3 = 1;
 137   3              }
 138   2          }
 139   1          if((delay_bit1&delay_bit2)==0)
 140   1          {
 141   2              fan_delay_cnt = 0;
 142   2          }
 143   1      //    if((delay_bit1 == 1)&&(delay_bit2 == 0))
 144   1      //    {
 145   1      //        fan_delay_cnt = 0;
 146   1      //    }
 147   1          fan_rotate_cnt++;
 148   1          if(fan_rotate_cnt>15)
 149   1          {
 150   2              fan_dis_bit = ~fan_dis_bit;
 151   2              fan_rotate_cnt = 0;
 152   2          }
 153   1          
 154   1          temp_rotate_cnt++;
 155   1          if(temp_rotate_cnt>50)
 156   1          {
 157   2              temp_dis_bit = ~temp_dis_bit;
 158   2              temp_rotate_cnt = 0;
 159   2          }
 160   1          
 161   1          key_cnt++;
 162   1          if(key_cnt>5)
 163   1          {
 164   2              key_cnt=0; 
 165   2              key_val = (P0&0X0f);
 166   2          }
 167   1          
 168   1          if(sync_delay_bit == 1)
 169   1          {
 170   2              sync_delay_cnt++;
 171   2              if(sync_delay_cnt>150)
 172   2              {
 173   3                  sync_delay_bit = 0;
 174   3                  sync_delay_cnt = 0;
 175   3              }
 176   2          }
 177   1      
 178   1          if(temp_delay_bit == 1)
C51 COMPILER V9.60.7.0   TIMER                                                             01/02/2025 11:31:14 PAGE 4   

 179   1          {
 180   2              temp_delay_cnt++;
 181   2              if(temp_delay_cnt>150)
 182   2              {
 183   3                  temp_delay_bit = 0;
 184   3                  temp_delay_cnt = 0;
 185   3              }
 186   2          }
 187   1          
 188   1          if(buzzer_bit==0)
 189   1          {
 190   2              buzzer_continue_cnt++;
 191   2              if(buzzer_continue_cnt>10)
 192   2              {
 193   3                  buzzer_continue_cnt=0; 
 194   3                  buzzer=buzzer_bit=1;
 195   3              }
 196   2          } 
 197   1          
 198   1          if(scan_stop_bit == 1)
 199   1          {
 200   2              sacn_cnt++;
 201   2              if(sacn_cnt>10)
 202   2              {
 203   3                  scan_start_bit = 1;
 204   3                  scan_stop_bit = 0;
 205   3                  sacn_cnt = 0;
 206   3              }
 207   2          }
 208   1             
 209   1      //    if(P07==0)
 210   1      //    {
 211   1      //        external_24bit = 1;   //24V接入
 212   1      //        previous_value = 1;
 213   1      //    }
 214   1      //    if(P07==1)
 215   1      //    {
 216   1      //        external_24bit = 0;
 217   1      //        previous_value = 0;
 218   1      //    }
 219   1      //    
 220   1          
 221   1      
 222   1      }
 223          
 224          void power_crl(uint8_t power_num)
 225          { 
 226   1          if(power_bit==1)
 227   1          {
 228   2              ET1 = 1;
 229   2          }
 230   1          else
 231   1          {
 232   2              ET1 = 0;
 233   2          }
 234   1          
 235   1          tim1_t = power_num*64+58400;
 236   1          
 237   1      //    TL1 = tim1_t;                   //设置定时初始值
 238   1      //    TH1 = tim1_t>>8;                          //设置定时初始值
 239   1      
 240   1      }
C51 COMPILER V9.60.7.0   TIMER                                                             01/02/2025 11:31:14 PAGE 5   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    511    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     13    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =     14    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
