C51 COMPILER V9.60.7.0   TIMER                                                             11/20/2024 17:46:01 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE TIMER
OBJECT MODULE PLACED IN .\Output\timer.obj
COMPILER INVOKED BY: D:\APP\Keil_v5\C51\BIN\C51.EXE Src\timer.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Inc;D:\APP\Keil_
                    -v5\C51\INC) DEBUG OBJECTEXTEND PRINT(.\Listings\timer.lst) OBJECT(.\Output\timer.obj)

line level    source

   1          #include "STC15W4Kxx.h"
   2          #include "timer.h"
   3          #include "stdint.h"
   4          #include "key.h"
   5          
   6          bit fan_dis_bit = 0;
   7          bit zero_bit = 0;
   8          bit buzzer_bit = 1;
   9          bit scan_stop_bit = 1;
  10          bit scan_start_bit = 0;
  11          bit tempchannel1 = 1;
  12          bit tempchannel2 = 1;
  13          bit tempchannel3 = 1;
  14          uint8_t channel_num = 1;
  15          void Tim0Init()  //11.0592Mhz  1ms
  16          {
  17   1          AUXR |= 0X80;   //修改计数速率，定时器时钟设置为12T模式
  18   1              
  19   1              TMOD &= 0XF0;   //清空TIM0需要配置的低四位（低四位是TIM0,高四位是TIM1）
  20   1      
  21   1              TH0 = 0XCD;   // TH0 高四位  TL0 低四位
  22   1              TL0 = 0XD4;   //通过计算得出的值，计算公式在下面
  23   1              
  24   1              TF0 = 0;  //清除TC0N-TF0  中断溢出标志，溢出后自动置1，CPU响应中断后置硬件清0
  25   1              TR0 = 1;  //TCON-TR0  TIM0开始计数启动
  26   1      
  27   1              ET0 = 1;   //打开IE-ET0，TIM0中断
  28   1      }
  29          
  30          
  31          void Tim1Init()  //11.0592Mhz  10ms  16位手动装载
  32          {   
  33   1              AUXR &= 0xBF;                   //定时器时钟12T模式
  34   1              TMOD &= 0x0F;                   //设置定时器模式
  35   1              TMOD |= 0x10;                   //设置定时器模式   手动/自动开关
  36   1          
  37   1      //    TL1 = 0x00;                               //设置定时初始值
  38   1      //      TH1 = 0xDC;                             //设置定时初始值
  39   1      //      TF1 = 0;                                //清除TF1标志
  40   1      //      TR1 = 1;                                //定时器1开始计时
  41   1      
  42   1      //    ET1 = 1; //打开IE-ET1，TIM1中断
  43   1      }
  44          
  45          void Tim3Init(void)             //10毫秒@11.0592MHz
  46          {
  47   1              T4T3M &= 0xFD;                  //定时器时钟12T模式
  48   1              T3L = 0x00;                             //设置定时初始值
  49   1              T3H = 0xDC;                             //设置定时初始值
  50   1              T4T3M |= 0x08;                  //定时器3开始计时
  51   1          
  52   1          IE2 |= 0x20; //打开IE2-ET2，TIM3中断
  53   1      }
  54          
C51 COMPILER V9.60.7.0   TIMER                                                             11/20/2024 17:46:01 PAGE 2   

  55          void ET0ISR(void) interrupt 0 
  56          {
  57   1          tempchannel1 = tempchannel2 = tempchannel3 = 1;    
  58   1              /*延时移相*/
  59   1          TL1 = 65520;                                //设置定时初始值
  60   1              TH1 = 65520>>8;                         //设置定时初始值
  61   1      
  62   1          zero_bit = 1;
  63   1          
  64   1          TR1 = 1;                            //定时器1开始计时      
  65   1          ET1 = 1; 
  66   1      }
  67          
  68          void Tim0Isr(void) interrupt 1 
  69          {
  70   1      
  71   1      }
  72          
  73          void Tim1Isr(void) interrupt 3 
  74          {
  75   1          static uint8_t i = 0;
  76   1          i++;
  77   1          if(i>15)
  78   1          {
  79   2              fan_dis_bit = ~fan_dis_bit;
  80   2              i = 0;
  81   2          }
  82   1          
  83   1          if(zero_bit == 1)
  84   1          {
  85   2              switch(channel_num)
  86   2              {
  87   3                  case 1: {tempchannel1=0;}break;
  88   3                  case 2: {tempchannel1=0; tempchannel2=0;}break;
  89   3                  case 3: {tempchannel1=0; tempchannel2=0; tempchannel3=0;}break;
  90   3                  case 4: {tempchannel1=0; tempchannel3=0;}break;
  91   3                  case 5: {tempchannel2=0; tempchannel3=0;}break;
  92   3                  case 6: {tempchannel2=0;}break;
  93   3                  case 7: {tempchannel3=0;}break;
  94   3              }
  95   2                  /*发送一个10us的脉冲*/
  96   2                  zero_bit = 0; 
  97   2      
  98   2                  TL1 = 0xF7;                         //设置定时初始值
  99   2                  TH1 = 0xFF;                         //设置定时初始值
 100   2          }
 101   1        
 102   1          else
 103   1          {
 104   2              tempchannel1 = tempchannel2 = tempchannel3 = 1;     //1-0-1的脉冲 2us
 105   2              TR1 = 0;                                //定时器关闭计时      
 106   2              ET1 = 0; 
 107   2          }
 108   1      }
 109          
 110          void Tim3Isr(void) interrupt 19 
 111          {
 112   1          static uint8_t buzzer_continue_cnt = 0;
 113   1          static uint8_t sacn_cnt = 0;
 114   1          if(buzzer_bit==0)
 115   1          {
 116   2              buzzer_continue_cnt++;
C51 COMPILER V9.60.7.0   TIMER                                                             11/20/2024 17:46:01 PAGE 3   

 117   2              if(buzzer_continue_cnt>10)
 118   2              {
 119   3                  buzzer_continue_cnt=0; 
 120   3                  buzzer=buzzer_bit=1;
 121   3              }
 122   2          } 
 123   1          
 124   1          if(scan_stop_bit == 1)
 125   1          {
 126   2              sacn_cnt++;
 127   2              if(sacn_cnt>10)
 128   2              {
 129   3                  scan_start_bit = 1;
 130   3                  scan_stop_bit = 0;
 131   3                  sacn_cnt = 0;
 132   3              }
 133   2          }
 134   1      }
 135          
 136          void power_crl(uint8_t power_num)
 137          {
 138   1          static uint16_t tim1_t;
 139   1          tim1_t = power_num*64+58400;
 140   1          TL1 = tim1_t;                   //设置定时初始值
 141   1          TH1 = tim1_t>>8;                            //设置定时初始值
 142   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    287    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      6    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      8    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
