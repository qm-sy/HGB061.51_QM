C51 COMPILER V9.60.7.0   EEPROM                                                            11/20/2024 17:46:00 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE EEPROM
OBJECT MODULE PLACED IN .\Output\eeprom.obj
COMPILER INVOKED BY: D:\APP\Keil_v5\C51\BIN\C51.EXE Src\eeprom.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Inc;D:\APP\Keil
                    -_v5\C51\INC) DEBUG OBJECTEXTEND PRINT(.\Listings\eeprom.lst) OBJECT(.\Output\eeprom.obj)

line level    source

   1          #include "STC15W4Kxx.h"
   2          #include "eeprom.h"
   3          #include "stdint.h"
   4          #include "delay.h"
   5          #include "key.h"
   6          #include "timer.h"
   7          #include "stdio.h"
   8          
   9          uint8_t mode_info[4];
  10          
  11          void ISPIdle()
  12          {
  13   1          IAP_CONTR = 0X00;
  14   1          IAP_CMD = 0X00;
  15   1          IAP_TRIG = 0X00;
  16   1          IAP_ADDRH = 0X80;
  17   1          IAP_ADDRL = 0X00; 
  18   1      }
  19          
  20          uint8_t ISP_read(uint16_t addr)
  21          {
  22   1          uint8_t dat;
  23   1          
  24   1          IAP_CONTR = 0X83;
  25   1          IAP_CMD = 0X01;
  26   1          IAP_ADDRL = addr;
  27   1          IAP_ADDRH = addr>>8;
  28   1          
  29   1          IAP_TRIG = 0X5A;
  30   1          IAP_TRIG = 0XA5;
  31   1          
  32   1          delay_ms(10);
  33   1          
  34   1          dat = IAP_DATA;
  35   1          
  36   1          ISPIdle();
  37   1          
  38   1          return dat;
  39   1      }
  40          
  41          void ISP_write(uint16_t addr,uint8_t dat)
  42          {
  43   1          IAP_CONTR = 0X83;
  44   1          IAP_CMD = 0X02;
  45   1          IAP_ADDRL = addr;
  46   1          IAP_ADDRH = addr>>8;
  47   1          IAP_DATA = dat;
  48   1          
  49   1          IAP_TRIG = 0X5A;
  50   1          IAP_TRIG = 0XA5;
  51   1          
  52   1          delay_ms(10);
  53   1          
  54   1          ISPIdle();
C51 COMPILER V9.60.7.0   EEPROM                                                            11/20/2024 17:46:00 PAGE 2   

  55   1      }
  56          
  57          void ISP_earse(uint16_t addr)
  58          {   
  59   1          IAP_CONTR = 0X83;   //  WT2:WT1:WT0 = 0 1 1  CPU等待时间>=12MHz
  60   1          IAP_CMD = 0X03;
  61   1          IAP_ADDRL = addr;
  62   1          IAP_ADDRH = addr>>8;
  63   1          
  64   1          IAP_TRIG = 0X5A;
  65   1          IAP_TRIG = 0XA5;
  66   1          
  67   1          delay_ms(10);
  68   1          
  69   1          ISPIdle();
  70   1      }
  71          
  72          //void eeprom_date_write()
  73          //{
  74          //    if(eeprom_bit == 1)
  75          //    { 
  76          //        ISP_earse(0x0000);
  77          //        
  78          //        ISP_write(0x0000,init_temp1);       //温度1
  79          
  80          //        
  81          //        eeprom_bit = 0;
  82          //    }
  83          //}
  84          void eeprom_mode_save()
  85          {
  86   1          uint16_t addr = 0x0000;
  87   1          ISP_earse(addr);
  88   1          ISP_write(addr,mode_num);  
  89   1          buzzer=buzzer_bit=0;
  90   1      }
  91          
  92          void eeprom_data_write()
  93          {
  94   1          uint8_t i;
  95   1          uint16_t addr;
  96   1          
  97   1          mode_info[0] = channel_num;         //通道
  98   1          mode_info[1] = sync_flag;           //同步标志位
  99   1          mode_info[2] = wind_num;            //风力
 100   1          mode_info[3] = power_num;           //功率
 101   1      
 102   1          addr = (mode_num * 2)<<8;
 103   1          
 104   1          ISP_earse(addr);
 105   1          for(i=0;i<4;i++)
 106   1          {
 107   2              ISP_write(addr,mode_info[i]);
 108   2              addr++;
 109   2          }
 110   1          buzzer=buzzer_bit=0;
 111   1      }
 112          
 113          void ISP_data_init()
 114          {
 115   1          uint8_t mode;
 116   1          mode = ISP_read(0x0000);
C51 COMPILER V9.60.7.0   EEPROM                                                            11/20/2024 17:46:00 PAGE 3   

 117   1          eeprom_data_read(mode);
 118   1      }
 119          
 120          void eeprom_data_read(uint8_t mode)
 121          {
 122   1          uint8_t i;
 123   1          uint16_t addr;
 124   1          
 125   1          addr = (mode * 2)<<8;
 126   1          for(i=0;i<4;i++)
 127   1          {
 128   2              mode_info[i] = ISP_read(addr);
 129   2          }
 130   1      }
 131              


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    313    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      4       8
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
