C51 COMPILER V9.60.7.0   SCREEN                                                            11/21/2024 16:46:46 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE SCREEN
OBJECT MODULE PLACED IN .\Output\screen.obj
COMPILER INVOKED BY: D:\APP\Keil_v5\C51\BIN\C51.EXE Src\screen.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Inc;D:\APP\Keil
                    -_v5\C51\INC) DEBUG OBJECTEXTEND PRINT(.\Listings\screen.lst) OBJECT(.\Output\screen.obj)

line level    source

   1          #include "STC15W4Kxx.h"
   2          #include "stdint.h"
   3          #include "delay.h"
   4          #include "intrins.h" 
   5          #include "screen.h"
   6          
   7          uint8_t value_03 = 0;  //该地址的值
   8          uint8_t value_06 = 0;
   9          uint8_t value_07 = 0;
  10          uint8_t value_0A = 0;
  11          uint8_t value_0B = 0;
  12          uint8_t value_0E = 0;
  13          uint8_t value_0F = 0; 
  14           
  15          uint8_t addr_tab[7] = { 0xc3,0xc6,0xc7,0xca,0xcb,0xce,0xcf};
  16          
  17          uint8_t num_tab[10] = {0xF5,0x05,0xD3,0x97,0x27,0xB6,0xF6,0x15,0xF7,0xB7};
  18                               /*  0    1    2    3    4    5    6    7    8    9  */
  19          
  20          void lcd_init()
  21          {
  22   1          TM1722_STB=1;            //端口配置初始化
  23   1          TM1722_CLK=1;
  24   1          TM1722_DIO=1;
  25   1          TM1722_Write_Byte(0x00); //工作模式
  26   1          TM1722_STB=1;
  27   1          TM1722_Write_Byte(0x44);   //固定地址模式
  28   1          TM1722_STB=1;
  29   1          
  30   1          lcd_clear();
  31   1          
  32   1          lcd_display();
  33   1      }
  34          
  35          void lcd_clear()  //清显示缓存
  36          {
  37   1          uint8_t i;
  38   1                       
  39   1          for(i=0;i<7;i++)
  40   1          {
  41   2              TM1722_Write_Byte(addr_tab[i]);
  42   2              TM1722_Write_Byte(0);
  43   2              TM1722_STB=1;    
  44   2          }
  45   1      }
  46          
  47          void lcd_display()  //显示开
  48          {
  49   1          TM1722_Write_Byte(0x93); 
  50   1          TM1722_STB=1;
  51   1      }
  52          
  53          void lcd_write_val(uint8_t addr,uint8_t dat)
  54          {
C51 COMPILER V9.60.7.0   SCREEN                                                            11/21/2024 16:46:46 PAGE 2   

  55   1          TM1722_Write_Byte(addr); 
  56   1          TM1722_Write_Byte(dat); 
  57   1          TM1722_STB=1;
  58   1      }
  59          
  60          /******************************************
  61          函数：写一字节函数
  62          参数：dat---写入的一字节数据
  63          返回值：无
  64          ******************************************/
  65          void TM1722_Write_Byte(uint8_t dat)
  66          {
  67   1        uint8_t i;
  68   1               
  69   1        delay_us(50); //用于片选信号的延时
  70   1        TM1722_STB=0;     //有效的片选信号
  71   1        for(i=0;i<8;i++)
  72   1        {
  73   2         TM1722_CLK = 0;
  74   2         TM1722_DIO = dat&0x01;
  75   2         TM1722_CLK = 1;    //时钟上升沿，送入一位数据
  76   2         dat>>=1;      
  77   2        }
  78   1        delay_us(50);   //用于片选信号的延时
  79   1      }
  80          
  81          void num_dis(uint8_t num)
  82          {
  83   1          uint8_t hundreds = num / 100;  // 获取百位数
  84   1          uint8_t tens = (num / 10) % 10;  // 获取十位数
  85   1          uint8_t ones = num % 10;  // 获取个位数
  86   1          
  87   1          value_0B &= 0x00;
  88   1          value_0A &= 0X00;
  89   1          value_07 &= 0X00;
  90   1          value_06 &= 0X00;
  91   1          
  92   1          value_0B |= (num_tab[hundreds]>>4);
  93   1          value_0A |= num_tab[hundreds];
  94   1          value_07 |= num_tab[tens];
  95   1          value_06 |= num_tab[ones]; 
  96   1          
  97   1          lcd_write_val(addr_tab[ADDR_0B],value_0B);
  98   1      
  99   1          lcd_write_val(addr_tab[ADDR_0A],value_0A);
 100   1          
 101   1          lcd_write_val(addr_tab[ADDR_07],value_07);
 102   1      
 103   1          lcd_write_val(addr_tab[ADDR_06],value_06); 
 104   1      
 105   1      
 106   1      }
 107          
 108          void wind_dis(uint8_t num)
 109          {
 110   1          value_0F &= 0x30;
 111   1          
 112   1          switch(num)
 113   1          {
 114   2              case 0:
 115   2                  value_0F |= 0x00;
 116   2                  break;
C51 COMPILER V9.60.7.0   SCREEN                                                            11/21/2024 16:46:46 PAGE 3   

 117   2              
 118   2              case 1:
 119   2                  value_0F |= 0x40;
 120   2                  break;
 121   2              
 122   2              case 2:
 123   2                  value_0F |= 0xc0;
 124   2                  break;
 125   2              
 126   2              case 3:
 127   2                  value_0F |= 0xc8;
 128   2                  break;
 129   2              
 130   2              case 4:
 131   2                  value_0F |= 0xcc;
 132   2                  break;
 133   2              
 134   2              case 5:
 135   2                  value_0F |= 0xce;
 136   2                  break;
 137   2              
 138   2              case 6:
 139   2                  value_0F |= 0xcf;
 140   2                  break;
 141   2              
 142   2              default:
 143   2                  break;
 144   2          }
 145   1          
 146   1          lcd_write_val(addr_tab[ADDR_0F],value_0F);
 147   1      }
 148          
 149          void channel_dis(uint8_t num)
 150          {
 151   1          value_0E &= 0x80;
 152   1          value_0B &= 0x0f;
 153   1          
 154   1          switch(num)
 155   1          {
 156   2              case 1:
 157   2                  value_0E |= 0x04;
 158   2                  value_0B |= 0x40;
 159   2                  break;
 160   2              
 161   2              case 2:
 162   2                  value_0E |= 0x02;
 163   2                  value_0B |= 0x20;
 164   2                  break;
 165   2              
 166   2              case 3:
 167   2                  value_0E |= 0x01;
 168   2                  value_0B |= 0x10;
 169   2                  break;
 170   2              
 171   2              case 4:
 172   2                  value_0E |= 0x06;
 173   2                  value_0B |= 0x60;
 174   2                  break;
 175   2              
 176   2              case 5:
 177   2                  value_0E |= 0x03;
 178   2                  value_0B |= 0x30;
C51 COMPILER V9.60.7.0   SCREEN                                                            11/21/2024 16:46:46 PAGE 4   

 179   2                  break;
 180   2              
 181   2              case 6:
 182   2                  value_0E |= 0x05;
 183   2                  value_0B |= 0x50;
 184   2                  break;
 185   2              
 186   2              case 7:
 187   2                  value_0E |= 0x07;
 188   2                  value_0B |= 0x70;
 189   2                  break;
 190   2              
 191   2              default:
 192   2                  break;
 193   2          }
 194   1          
 195   1          lcd_write_val(addr_tab[ADDR_0E],value_0E);
 196   1          lcd_write_val(addr_tab[ADDR_0B],value_0B);
 197   1      }
 198          
 199          void sun_dis(bit on_off)
 200          {
 201   1          value_0E &= 0xf7;
 202   1          if(on_off==DIS_ON)
 203   1          {
 204   2              value_0E |= 0x08;   
 205   2          }
 206   1          lcd_write_val(addr_tab[ADDR_0E],value_0E);
 207   1      }
 208          
 209          void sync_dis(bit on_off)
 210          {
 211   1          value_03 &= 0xef;
 212   1          if(on_off==DIS_ON)
 213   1          {
 214   2              value_03 |= 0x10;   
 215   2          }
 216   1          lcd_write_val(addr_tab[ADDR_03],value_03);
 217   1      }
 218          
 219          void alarm_dis(bit on_off)
 220          {
 221   1          value_03 &= 0xdf;
 222   1          if(on_off==DIS_ON)
 223   1          {
 224   2              value_03 |= 0x20;   
 225   2          }
 226   1          lcd_write_val(addr_tab[ADDR_03],value_03);
 227   1      }
 228          
 229          //void F_dis(bit on_off)
 230          //{
 231          //    value_0E &= 0x7f;
 232          //    if(on_off==DIS_ON)
 233          //    {
 234          //        value_0E |= 0x80;   
 235          //    }
 236          //    lcd_write_val(addr_tab[ADDR_0E],value_0E);
 237          //}
 238          
 239          //void M_dis(bit on_off)
 240          //{
C51 COMPILER V9.60.7.0   SCREEN                                                            11/21/2024 16:46:46 PAGE 5   

 241          //    value_0E &= 0xbf;
 242          //    if(on_off==DIS_ON)
 243          //    {
 244          //        value_0E |= 0x40;   
 245          //    }
 246          //    lcd_write_val(addr_tab[ADDR_0E],value_0E);
 247          //}
 248          
 249          //void R_dis(bit on_off)
 250          //{
 251          //    value_0E &= 0xdf;
 252          //    if(on_off==DIS_ON)
 253          //    {
 254          //        value_0E |= 0x20;   
 255          //    }
 256          //    lcd_write_val(addr_tab[ADDR_0E],value_0E);
 257          //}
 258          
 259          void Celsius_dis(bit on_off)
 260          {
 261   1          value_03 &= 0xbf;
 262   1          if(on_off==DIS_ON)
 263   1          {
 264   2              value_03 |= 0x40;   
 265   2          }
 266   1          lcd_write_val(addr_tab[ADDR_03],value_03);
 267   1      }
 268          
 269          void mode_dis(bit on_off)
 270          {
 271   1          value_03 &= 0x7f;
 272   1          if(on_off==DIS_ON)
 273   1          {
 274   2              value_03 |= 0x80;   
 275   2          }
 276   1          lcd_write_val(addr_tab[ADDR_03],value_03);
 277   1      }
 278          
 279          void percentage_dis(bit on_off)
 280          {
 281   1          value_06 &= 0xf7;
 282   1          if(on_off==DIS_ON)
 283   1          {
 284   2              value_06 |= 0x08;   
 285   2          }
 286   1          lcd_write_val(addr_tab[ADDR_06],value_06);
 287   1      }
 288          
 289          //void cur_dis(bit on_off)
 290          //{
 291          //    value_03 &= 0xf7;
 292          //    if(on_off==DIS_ON)
 293          //    {
 294          //        value_03 |= 0x08;   
 295          //    }
 296          //    lcd_write_val(addr_tab[ADDR_03],value_03);
 297          //}
 298          
 299          //void set_dis(bit on_off)
 300          //{
 301          //    value_03 &= 0xfb;
 302          //    if(on_off==DIS_ON)
C51 COMPILER V9.60.7.0   SCREEN                                                            11/21/2024 16:46:46 PAGE 6   

 303          //    {
 304          //        value_03 |= 0x04;   
 305          //    }
 306          //    lcd_write_val(addr_tab[ADDR_03],value_03);
 307          //}
 308          
 309          void fan_center_dis(bit on_off)
 310          {
 311   1          value_0F &= 0xdf;
 312   1          if(on_off==DIS_ON)
 313   1          {
 314   2              value_0F |= 0x20;   
 315   2          }
 316   1          lcd_write_val(addr_tab[ADDR_0F],value_0F);
 317   1      }
 318          
 319          void fan_leaf1_dis(bit on_off)
 320          {
 321   1          value_0E &= 0xef;
 322   1          if(on_off==DIS_ON)
 323   1          {
 324   2              value_0E |= 0x10;   
 325   2          }
 326   1          lcd_write_val(addr_tab[ADDR_0E],value_0E);
 327   1      }
 328          
 329          void fan_leaf2_dis(bit on_off)
 330          {
 331   1          value_0F &= 0xef;
 332   1          if(on_off==DIS_ON)
 333   1          {
 334   2              value_0F |= 0x10;   
 335   2          }
 336   1          lcd_write_val(addr_tab[ADDR_0F],value_0F);
 337   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    864    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     24       3
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       9
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
