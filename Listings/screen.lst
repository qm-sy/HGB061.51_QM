C51 COMPILER V9.60.7.0   SCREEN                                                            11/20/2024 17:46:01 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE SCREEN
OBJECT MODULE PLACED IN .\Output\screen.obj
COMPILER INVOKED BY: D:\APP\Keil_v5\C51\BIN\C51.EXE Src\screen.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Inc;D:\APP\Keil
                    -_v5\C51\INC) DEBUG OBJECTEXTEND PRINT(.\Listings\screen.lst) OBJECT(.\Output\screen.obj)

line level    source

   1          #include "STC15W4Kxx.h"
   2          #include "stdint.h"
   3          #include "delay.h"
   4          #include "intrins.h" 
   5          #include "screen.h"
   6          
   7          uint8_t value_03 = 0;  //该地址的值
   8          uint8_t value_06 = 0;
   9          uint8_t value_07 = 0;
  10          uint8_t value_0A = 0;
  11          uint8_t value_0B = 0;
  12          uint8_t value_0E = 0;
  13          uint8_t value_0F = 0; 
  14           
  15          uint8_t addr_tab[7] = { 0xc3,0xc6,0xc7,0xca,0xcb,0xce,0xcf};
  16          
  17          uint8_t num_tab[10] = {0xF5,0x05,0xD3,0x97,0x27,0xB6,0xF6,0x15,0xF7,0xB7};
  18                               /*  0    1    2    3    4    5    6    7    8    9  */
  19          //unsigned char code Tab[]={
  20          //0xF5,0x05,0xD3,0x97,0x27,0xB6,0xF6,0x15,
  21          //0xF7,0xB7,0x77,0xE6,0xF0,0xC7,0xF2,0x72,       //0~F 代码
  22          //0x00, //不显示
  23          //0x02,//显示-
  24          //};
  25          
  26          void lcd_init()
  27          {
  28   1          TM1722_STB=1;            //端口配置初始化
  29   1          TM1722_CLK=1;
  30   1          TM1722_DIO=1;
  31   1          TM1722_Write_Byte(0x00); //工作模式
  32   1          TM1722_STB=1;
  33   1          TM1722_Write_Byte(0x44);   //固定地址模式
  34   1          TM1722_STB=1;
  35   1          
  36   1          lcd_clear();
  37   1          
  38   1          lcd_display();
  39   1      }
  40          
  41          void lcd_clear()  //清显示缓存
  42          {
  43   1          uint8_t i;
  44   1                       
  45   1          for(i=0;i<7;i++)
  46   1          {
  47   2              TM1722_Write_Byte(addr_tab[i]);
  48   2              TM1722_Write_Byte(0);
  49   2              TM1722_STB=1;    
  50   2          }
  51   1      }
  52          
  53          void lcd_display()  //显示开
  54          {
C51 COMPILER V9.60.7.0   SCREEN                                                            11/20/2024 17:46:01 PAGE 2   

  55   1          TM1722_Write_Byte(0x93); 
  56   1          TM1722_STB=1;
  57   1      }
  58          
  59          void lcd_write_val(uint8_t addr,uint8_t dat)
  60          {
  61   1          TM1722_Write_Byte(addr); 
  62   1          TM1722_Write_Byte(dat); 
  63   1          TM1722_STB=1;
  64   1      }
  65          
  66          /******************************************
  67          函数：写一字节函数
  68          参数：dat---写入的一字节数据
  69          返回值：无
  70          ******************************************/
  71          void TM1722_Write_Byte(uint8_t dat)
  72          {
  73   1        uint8_t i;
  74   1               
  75   1        delay_us(50); //用于片选信号的延时
  76   1        TM1722_STB=0;     //有效的片选信号
  77   1        for(i=0;i<8;i++)
  78   1        {
  79   2         TM1722_CLK = 0;
  80   2         TM1722_DIO = dat&0x01;
  81   2         TM1722_CLK = 1;    //时钟上升沿，送入一位数据
  82   2         dat>>=1;      
  83   2        }
  84   1        delay_us(50);   //用于片选信号的延时
  85   1      }
  86          
  87          void num_dis(uint8_t num)
  88          {
  89   1          uint8_t hundreds = num / 100;  // 获取百位数
  90   1          uint8_t tens = (num / 10) % 10;  // 获取十位数
  91   1          uint8_t ones = num % 10;  // 获取个位数
  92   1          
  93   1          value_0B &= 0x70;
  94   1          value_0A &= 0X00;
  95   1          value_07 &= 0X00;
  96   1          value_06 &= 0X08;
  97   1          
  98   1          value_0B |= (num_tab[hundreds]>>4);
  99   1          value_0A |= num_tab[hundreds];
 100   1          value_07 |= num_tab[tens];
 101   1          value_06 |= num_tab[ones]; 
 102   1          
 103   1          lcd_write_val(addr_tab[ADDR_0B],value_0B);
 104   1      
 105   1          lcd_write_val(addr_tab[ADDR_0A],value_0A);
 106   1          
 107   1          lcd_write_val(addr_tab[ADDR_07],value_07);
 108   1      
 109   1          lcd_write_val(addr_tab[ADDR_06],value_06); 
 110   1      
 111   1      
 112   1      }
 113          
 114          void wind_dis(uint8_t num)
 115          {
 116   1          value_0F &= 0x30;
C51 COMPILER V9.60.7.0   SCREEN                                                            11/20/2024 17:46:01 PAGE 3   

 117   1          
 118   1          switch(num)
 119   1          {
 120   2              case 0:
 121   2                  value_0F |= 0x00;
 122   2                  break;
 123   2              
 124   2              case 1:
 125   2                  value_0F |= 0x40;
 126   2                  break;
 127   2              
 128   2              case 2:
 129   2                  value_0F |= 0xc0;
 130   2                  break;
 131   2              
 132   2              case 3:
 133   2                  value_0F |= 0xc8;
 134   2                  break;
 135   2              
 136   2              case 4:
 137   2                  value_0F |= 0xcc;
 138   2                  break;
 139   2              
 140   2              case 5:
 141   2                  value_0F |= 0xce;
 142   2                  break;
 143   2              
 144   2              case 6:
 145   2                  value_0F |= 0xcf;
 146   2                  break;
 147   2              
 148   2              default:
 149   2                  break;
 150   2          }
 151   1          
 152   1          lcd_write_val(addr_tab[ADDR_0F],value_0F);
 153   1      }
 154          
 155          void channel_dis(uint8_t num)
 156          {
 157   1          value_0E &= 0x08;
 158   1          value_0B &= 0x0f;
 159   1          
 160   1          switch(num)
 161   1          {
 162   2              case 1:
 163   2                  value_0E |= 0x04;
 164   2                  value_0B |= 0x40;
 165   2                  break;
 166   2              
 167   2              case 2:
 168   2                  value_0E |= 0x02;
 169   2                  value_0B |= 0x20;
 170   2                  break;
 171   2              
 172   2              case 3:
 173   2                  value_0E |= 0x01;
 174   2                  value_0B |= 0x10;
 175   2                  break;
 176   2              
 177   2              case 4:
 178   2                  value_0E |= 0x06;
C51 COMPILER V9.60.7.0   SCREEN                                                            11/20/2024 17:46:01 PAGE 4   

 179   2                  value_0B |= 0x60;
 180   2                  break;
 181   2              
 182   2              case 5:
 183   2                  value_0E |= 0x03;
 184   2                  value_0B |= 0x30;
 185   2                  break;
 186   2              
 187   2              case 6:
 188   2                  value_0E |= 0x05;
 189   2                  value_0B |= 0x50;
 190   2                  break;
 191   2              
 192   2              case 7:
 193   2                  value_0E |= 0x07;
 194   2                  value_0B |= 0x70;
 195   2                  break;
 196   2              
 197   2              default:
 198   2                  break;
 199   2          }
 200   1          
 201   1          lcd_write_val(addr_tab[ADDR_0E],value_0E);
 202   1          lcd_write_val(addr_tab[ADDR_0B],value_0B);
 203   1      }
 204          
 205          void sun_dis(bit on_off)
 206          {
 207   1          value_0E &= 0xf7;
 208   1          if(on_off==DIS_ON)
 209   1          {
 210   2              value_0E |= 0x08;   
 211   2          }
 212   1          lcd_write_val(addr_tab[ADDR_0E],value_0E);
 213   1      }
 214          
 215          void sync_dis(bit on_off)
 216          {
 217   1          value_03 &= 0xef;
 218   1          if(on_off==DIS_ON)
 219   1          {
 220   2              value_03 |= 0x10;   
 221   2          }
 222   1          lcd_write_val(addr_tab[ADDR_03],value_03);
 223   1      }
 224          
 225          void alarm_dis(bit on_off)
 226          {
 227   1          value_03 &= 0xdf;
 228   1          if(on_off==DIS_ON)
 229   1          {
 230   2              value_03 |= 0x20;   
 231   2          }
 232   1          lcd_write_val(addr_tab[ADDR_03],value_03);
 233   1      }
 234          
 235          void F_dis(bit on_off)
 236          {
 237   1          value_0E &= 0x7f;
 238   1          if(on_off==DIS_ON)
 239   1          {
 240   2              value_0E |= 0x80;   
C51 COMPILER V9.60.7.0   SCREEN                                                            11/20/2024 17:46:01 PAGE 5   

 241   2          }
 242   1          lcd_write_val(addr_tab[ADDR_0E],value_0E);
 243   1      }
 244          
 245          void M_dis(bit on_off)
 246          {
 247   1          value_0E &= 0xbf;
 248   1          if(on_off==DIS_ON)
 249   1          {
 250   2              value_0E |= 0x40;   
 251   2          }
 252   1          lcd_write_val(addr_tab[ADDR_0E],value_0E);
 253   1      }
 254          
 255          void R_dis(bit on_off)
 256          {
 257   1          value_0E &= 0xdf;
 258   1          if(on_off==DIS_ON)
 259   1          {
 260   2              value_0E |= 0x20;   
 261   2          }
 262   1          lcd_write_val(addr_tab[ADDR_0E],value_0E);
 263   1      }
 264          
 265          void Celsius_dis(bit on_off)
 266          {
 267   1          value_03 &= 0xbf;
 268   1          if(on_off==DIS_ON)
 269   1          {
 270   2              value_03 |= 0x40;   
 271   2          }
 272   1          lcd_write_val(addr_tab[ADDR_03],value_03);
 273   1      }
 274          
 275          void mode_dis(bit on_off)
 276          {
 277   1          value_03 &= 0x7f;
 278   1          if(on_off==DIS_ON)
 279   1          {
 280   2              value_03 |= 0x80;   
 281   2          }
 282   1          lcd_write_val(addr_tab[ADDR_03],value_03);
 283   1      }
 284          
 285          void percentage_dis(bit on_off)
 286          {
 287   1          value_06 &= 0xf7;
 288   1          if(on_off==DIS_ON)
 289   1          {
 290   2              value_06 |= 0x08;   
 291   2          }
 292   1          lcd_write_val(addr_tab[ADDR_06],value_06);
 293   1      }
 294          
 295          void cur_dis(bit on_off)
 296          {
 297   1          value_03 &= 0xf7;
 298   1          if(on_off==DIS_ON)
 299   1          {
 300   2              value_03 |= 0x08;   
 301   2          }
 302   1          lcd_write_val(addr_tab[ADDR_03],value_03);
C51 COMPILER V9.60.7.0   SCREEN                                                            11/20/2024 17:46:01 PAGE 6   

 303   1      }
 304          
 305          void set_dis(bit on_off)
 306          {
 307   1          value_03 &= 0xfb;
 308   1          if(on_off==DIS_ON)
 309   1          {
 310   2              value_03 |= 0x04;   
 311   2          }
 312   1          lcd_write_val(addr_tab[ADDR_03],value_03);
 313   1      }
 314          
 315          void fan_center_dis(bit on_off)
 316          {
 317   1          value_0F &= 0xdf;
 318   1          if(on_off==DIS_ON)
 319   1          {
 320   2              value_0F |= 0x20;   
 321   2          }
 322   1          lcd_write_val(addr_tab[ADDR_0F],value_0F);
 323   1      }
 324          
 325          void fan_leaf1_dis(bit on_off)
 326          {
 327   1          value_0E &= 0xef;
 328   1          if(on_off==DIS_ON)
 329   1          {
 330   2              value_0E |= 0x10;   
 331   2          }
 332   1          lcd_write_val(addr_tab[ADDR_0E],value_0E);
 333   1      }
 334          
 335          void fan_leaf2_dis(bit on_off)
 336          {
 337   1          value_0F &= 0xef;
 338   1          if(on_off==DIS_ON)
 339   1          {
 340   2              value_0F |= 0x10;   
 341   2          }
 342   1          lcd_write_val(addr_tab[ADDR_0F],value_0F);
 343   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1005    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     24       3
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----      14
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
