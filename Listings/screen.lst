C51 COMPILER V9.60.7.0   SCREEN                                                            11/19/2024 16:38:29 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE SCREEN
OBJECT MODULE PLACED IN .\Output\screen.obj
COMPILER INVOKED BY: D:\APP\Keil_v5\C51\BIN\C51.EXE Src\screen.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Inc;D:\APP\Keil
                    -_v5\C51\INC) DEBUG OBJECTEXTEND PRINT(.\Listings\screen.lst) OBJECT(.\Output\screen.obj)

line level    source

   1          #include "STC15W4Kxx.h"
   2          #include "stdint.h"
   3          #include "delay.h"
   4          #include "intrins.h" 
   5          #include "screen.h"
   6          
   7          uint8_t value_03 = 0;  //该地址的值
   8          uint8_t value_06 = 0;
   9          uint8_t value_07 = 0;
  10          uint8_t value_0A = 0;
  11          uint8_t value_0B = 0;
  12          uint8_t value_0E = 0;
  13          uint8_t value_0F = 0; 
  14           
  15          uint8_t addr_tab[7] = { 0xc3,0xc6,0xc7,0xca,0xcb,0xce, 0xcf};
  16          
  17          uint8_t num_tab[10] = {0xF5,0x05,0xD3,0x97,0x27,0xB6,0xF6,0x15,0xF7,0xB7};
  18                               /*  0    1    2    3    4    5    6    7    8    9  */
  19          //unsigned char code Tab[]={
  20          //0xF5,0x05,0xD3,0x97,0x27,0xB6,0xF6,0x15,
  21          //0xF7,0xB7,0x77,0xE6,0xF0,0xC7,0xF2,0x72,       //0~F 代码
  22          //0x00, //不显示
  23          //0x02,//显示-
  24          //};
  25          
  26          void lcd_init()
  27          {
  28   1          TM1722_STB=1;            //端口配置初始化
  29   1          TM1722_CLK=1;
  30   1          TM1722_DIO=1;
  31   1          TM1722_Write_Byte(0x00); //工作模式
  32   1          TM1722_STB=1;
  33   1          TM1722_Write_Byte(0x44);   //固定地址模式
  34   1          TM1722_STB=1;
  35   1          
  36   1          lcd_clear();
  37   1          
  38   1          lcd_display();
  39   1      }
  40          
  41          void lcd_clear()  //清显示缓存
  42          {
  43   1          uint8_t i;
  44   1                       
  45   1          for(i=0;i<7;i++)
  46   1          {
  47   2              TM1722_Write_Byte(addr_tab[i]);
  48   2              TM1722_Write_Byte(0);
  49   2              TM1722_STB=1;    
  50   2          }
  51   1      }
  52          
  53          void lcd_display()  //显示开
  54          {
C51 COMPILER V9.60.7.0   SCREEN                                                            11/19/2024 16:38:29 PAGE 2   

  55   1          TM1722_Write_Byte(0x93); 
  56   1          TM1722_STB=1;
  57   1      }
  58          
  59          void lcd_write_val(uint8_t addr,uint8_t dat)
  60          {
  61   1          TM1722_Write_Byte(addr); 
  62   1          TM1722_Write_Byte(dat); 
  63   1          TM1722_STB=1;
  64   1      }
  65          
  66          /******************************************
  67          函数：写一字节函数
  68          参数：dat---写入的一字节数据
  69          返回值：无
  70          ******************************************/
  71          void TM1722_Write_Byte(uint8_t dat)
  72          {
  73   1        uint8_t i;
  74   1               
  75   1        delay_us(50); //用于片选信号的延时
  76   1        TM1722_STB=0;     //有效的片选信号
  77   1        for(i=0;i<8;i++)
  78   1        {
  79   2         TM1722_CLK = 0;
  80   2         TM1722_DIO = dat&0x01;
  81   2         TM1722_CLK = 1;    //时钟上升沿，送入一位数据
  82   2         dat>>=1;      
  83   2        }
  84   1        delay_us(50);   //用于片选信号的延时
  85   1      }
  86          
  87          void num_dis(uint8_t num)
  88          {
  89   1          uint8_t hundreds = num / 100;  // 获取百位数
  90   1          uint8_t tens = (num / 10) % 10;  // 获取十位数
  91   1          uint8_t ones = num % 10;  // 获取个位数
  92   1          
  93   1          value_0B &= 0x70;
  94   1          value_0A &= 0X00;
  95   1          value_07 &= 0X00;
  96   1          value_06 &= 0X08;
  97   1          
  98   1          value_0B |= (num_tab[hundreds]>>4);
  99   1          value_0A |= num_tab[hundreds];
 100   1          value_07 |= num_tab[tens];
 101   1          value_06 |= num_tab[ones]; 
 102   1          
 103   1          lcd_write_val(addr_tab[ADDR_0B],value_0B);
 104   1      
 105   1          lcd_write_val(addr_tab[ADDR_0A],value_0A);
 106   1          
 107   1          lcd_write_val(addr_tab[ADDR_07],value_07);
 108   1      
 109   1          lcd_write_val(addr_tab[ADDR_06],value_06);
 110   1      }
 111          
 112          void wind_dis(uint8_t num)
 113          {
 114   1          value_0F &= 0x30;
 115   1          
 116   1          switch(num)
C51 COMPILER V9.60.7.0   SCREEN                                                            11/19/2024 16:38:29 PAGE 3   

 117   1          {
 118   2              case 0:
 119   2                  value_0F |= 0x00;
 120   2                  break;
 121   2              
 122   2              case 1:
 123   2                  value_0F |= 0x40;
 124   2                  break;
 125   2              
 126   2              case 2:
 127   2                  value_0F |= 0xc0;
 128   2                  break;
 129   2              
 130   2              case 3:
 131   2                  value_0F |= 0xc8;
 132   2                  break;
 133   2              
 134   2              case 4:
 135   2                  value_0F |= 0xcc;
 136   2                  break;
 137   2              
 138   2              case 5:
 139   2                  value_0F |= 0xce;
 140   2                  break;
 141   2              
 142   2              case 6:
 143   2                  value_0F |= 0xcf;
 144   2                  break;
 145   2              
 146   2              default:
 147   2                  break;
 148   2          }
 149   1          
 150   1          lcd_write_val(addr_tab[ADDR_0F],value_0F);
 151   1      }
 152          
 153          void channel_dis(uint8_t num)
 154          {
 155   1          value_0E &= 0xf8;
 156   1          
 157   1          switch(num)
 158   1          {
 159   2              case 0:
 160   2                  value_0E |= 0x01;
 161   2                  break;
 162   2              
 163   2              case 1:
 164   2                  value_0E |= 0x02;
 165   2                  break;
 166   2              
 167   2              case 2:
 168   2                  value_0E |= 0x03;
 169   2                  break;
 170   2              
 171   2              case 3:
 172   2                  value_0E |= 0x04;
 173   2                  break;
 174   2              
 175   2              case 4:
 176   2                  value_0E |= 0x05;
 177   2                  break;
 178   2              
C51 COMPILER V9.60.7.0   SCREEN                                                            11/19/2024 16:38:29 PAGE 4   

 179   2              case 5:
 180   2                  value_0E |= 0x06;
 181   2                  break;
 182   2              
 183   2              case 6:
 184   2                  value_0E |= 0x07;
 185   2                  break;
 186   2              
 187   2              default:
 188   2                  break;
 189   2          }
 190   1          
 191   1          lcd_write_val(addr_tab[ADDR_0E],value_0E);
 192   1      }
 193          
 194          void sun_dis(bit on_off)
 195          {
 196   1          value_0E &= 0xf7;
 197   1          if(on_off==DIS_ON)
 198   1          {
 199   2              value_0E |= 0x08;   
 200   2          }
 201   1          lcd_write_val(addr_tab[ADDR_0E],value_0E);
 202   1      }
 203          
 204          void sync_dis(bit on_off)
 205          {
 206   1          value_03 &= 0xef;
 207   1          if(on_off==DIS_ON)
 208   1          {
 209   2              value_03 |= 0x10;   
 210   2          }
 211   1          lcd_write_val(addr_tab[ADDR_03],value_03);
 212   1      }
 213          
 214          void alarm_dis(bit on_off)
 215          {
 216   1          value_03 &= 0xdf;
 217   1          if(on_off==DIS_ON)
 218   1          {
 219   2              value_03 |= 0x20;   
 220   2          }
 221   1          lcd_write_val(addr_tab[ADDR_03],value_03);
 222   1      }
 223          
 224          void F_dis(bit on_off)
 225          {
 226   1          value_0E &= 0x7f;
 227   1          if(on_off==DIS_ON)
 228   1          {
 229   2              value_0E |= 0x80;   
 230   2          }
 231   1          lcd_write_val(addr_tab[ADDR_0E],value_0E);
 232   1      }
 233          
 234          void M_dis(bit on_off)
 235          {
 236   1          value_0E &= 0xbf;
 237   1          if(on_off==DIS_ON)
 238   1          {
 239   2              value_0E |= 0x40;   
 240   2          }
C51 COMPILER V9.60.7.0   SCREEN                                                            11/19/2024 16:38:29 PAGE 5   

 241   1          lcd_write_val(addr_tab[ADDR_0E],value_0E);
 242   1      }
 243          
 244          void R_dis(bit on_off)
 245          {
 246   1          value_0E &= 0xdf;
 247   1          if(on_off==DIS_ON)
 248   1          {
 249   2              value_0E |= 0x20;   
 250   2          }
 251   1          lcd_write_val(addr_tab[ADDR_0E],value_0E);
 252   1      }
 253          
 254          void Celsius_dis(bit on_off)
 255          {
 256   1          value_03 &= 0xbf;
 257   1          if(on_off==DIS_ON)
 258   1          {
 259   2              value_03 |= 0x40;   
 260   2          }
 261   1          lcd_write_val(addr_tab[ADDR_03],value_03);
 262   1      }
 263          
 264          void mode_dis(bit on_off)
 265          {
 266   1          value_03 &= 0x7f;
 267   1          if(on_off==DIS_ON)
 268   1          {
 269   2              value_03 |= 0x80;   
 270   2          }
 271   1          lcd_write_val(addr_tab[ADDR_03],value_03);
 272   1      }
 273          
 274          void percentage_dis(bit on_off)
 275          {
 276   1          value_06 &= 0xf7;
 277   1          if(on_off==DIS_ON)
 278   1          {
 279   2              value_06 |= 0x08;   
 280   2          }
 281   1          lcd_write_val(addr_tab[ADDR_06],value_06);
 282   1      }
 283          
 284          void cur_dis(bit on_off)
 285          {
 286   1          value_03 &= 0xf7;
 287   1          if(on_off==DIS_ON)
 288   1          {
 289   2              value_03 |= 0x08;   
 290   2          }
 291   1          lcd_write_val(addr_tab[ADDR_03],value_03);
 292   1      }
 293          
 294          void set_dis(bit on_off)
 295          {
 296   1          value_03 &= 0xfb;
 297   1          if(on_off==DIS_ON)
 298   1          {
 299   2              value_03 |= 0x04;   
 300   2          }
 301   1          lcd_write_val(addr_tab[ADDR_03],value_03);
 302   1      }
C51 COMPILER V9.60.7.0   SCREEN                                                            11/19/2024 16:38:29 PAGE 6   

 303          
 304          void fan_center_dis(bit on_off)
 305          {
 306   1          value_0F &= 0xdf;
 307   1          if(on_off==DIS_ON)
 308   1          {
 309   2              value_0F |= 0x20;   
 310   2          }
 311   1          lcd_write_val(addr_tab[ADDR_0F],value_0F);
 312   1      }
 313          
 314          void fan_leaf1_dis(bit on_off)
 315          {
 316   1          value_0E &= 0xef;
 317   1          if(on_off==DIS_ON)
 318   1          {
 319   2              value_0E |= 0x10;   
 320   2          }
 321   1          lcd_write_val(addr_tab[ADDR_0E],value_0E);
 322   1      }
 323          
 324          void fan_leaf2_dis(bit on_off)
 325          {
 326   1          value_0F &= 0xef;
 327   1          if(on_off==DIS_ON)
 328   1          {
 329   2              value_0F |= 0x10;   
 330   2          }
 331   1          lcd_write_val(addr_tab[ADDR_0F],value_0F);
 332   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    928    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     24       3
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----      14
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
