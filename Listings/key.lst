C51 COMPILER V9.60.7.0   KEY                                                               11/20/2024 17:46:01 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE KEY
OBJECT MODULE PLACED IN .\Output\key.obj
COMPILER INVOKED BY: D:\APP\Keil_v5\C51\BIN\C51.EXE Src\key.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Inc;D:\APP\Keil_v5
                    -\C51\INC) DEBUG OBJECTEXTEND PRINT(.\Listings\key.lst) OBJECT(.\Output\key.obj)

line level    source

   1          #include "STC15W4Kxx.h"
   2          #include "key.h"
   3          #include "stdint.h"
   4          #include "timer.h"
   5          #include "pwm.h"
   6          #include "screen.h"
   7          #include "delay.h"
   8          #include "eeprom.h"
   9          #include "stdio.h"
  10          
  11          uint8_t wind_num = 0;
  12          uint8_t power_num = 0;
  13          uint8_t mode_num = 0;
  14          uint8_t sync_flag = 0;
  15          
  16          void button_scan()
  17          {
  18   1          uint8_t key_val = (P0&0X0f);
  19   1          if(scan_start_bit == 1)
  20   1          {
  21   2              switch(key_val)
  22   2              {
  23   3                  case PowerKey:
  24   3                      power_key();
  25   3                      break;
  26   3                  
  27   3                  case UpKey:
  28   3                      up_key();
  29   3                      delay_ms(50);
  30   3                      break;
  31   3                  
  32   3                  case ChannelChoose:
  33   3                      channel_choose();
  34   3                      delay_ms(50);
  35   3                      break;
  36   3      //            case FunctionKey:
  37   3                  
  38   3                  case ModeChoose:
  39   3                      mode_choose();
  40   3                      delay_ms(50);
  41   3                      break;
  42   3                      
  43   3                  case DownKey:
  44   3                      down_key();
  45   3                      delay_ms(50);
  46   3                      break;
  47   3                  
  48   3                  case FanUp:
  49   3                      fan_up();   
  50   3                      delay_ms(50); 
  51   3                      break;
  52   3                  
  53   3                  case FanDown:
  54   3                      fan_down();          
C51 COMPILER V9.60.7.0   KEY                                                               11/20/2024 17:46:01 PAGE 2   

  55   3                      delay_ms(50);
  56   3                      break;
  57   3      
  58   3              }
  59   2              scan_stop_bit = 1;
  60   2              scan_start_bit = 0;
  61   2          }
  62   1      }
  63          
  64          void fan_up()
  65          {
  66   1          buzzer=buzzer_bit=0;
  67   1          wind_num += 1;
  68   1          if(wind_num>6)
  69   1          {
  70   2              wind_num = 6;
  71   2          }
  72   1          wind_crl(wind_num);
  73   1          wind_dis(wind_num);
  74   1          
  75   1          eeprom_data_write();
  76   1      }
  77          
  78          void fan_down()
  79          {
  80   1          buzzer=buzzer_bit=0;
  81   1          wind_num -= 1;
  82   1          if(wind_num<0)
  83   1          {
  84   2              wind_num = 0;
  85   2          }
  86   1          wind_crl(wind_num);
  87   1          wind_dis(wind_num);
  88   1          
  89   1          eeprom_data_write();
  90   1      }
  91          
  92          void up_key()
  93          {
  94   1          char up_num = 0;
  95   1      //    uint8_t dat;
  96   1          up_num = power_num;
  97   1          buzzer=buzzer_bit=0;
  98   1          up_num += 5;
  99   1          if(up_num>100)
 100   1          {
 101   2              up_num = 100;
 102   2          }
 103   1          power_num = up_num;
 104   1          power_crl(power_num);
 105   1          num_dis(power_num);
 106   1          
 107   1          eeprom_data_write();
 108   1          printf("THE value of mode_info[0] is %d \r\n",(int)mode_info[0]);
 109   1          printf("THE value of mode_info[2] is %d \r\n",(int)mode_info[2]);
 110   1          printf("THE value of mode_info[3] is %d \r\n",(int)mode_info[3]);
 111   1          
 112   1      //    dat = ISP_read(0x0200);
 113   1      //    printf("THE value of mode_info[0] is %d \r\n",(int)dat);
 114   1      //    
 115   1          
 116   1      }
C51 COMPILER V9.60.7.0   KEY                                                               11/20/2024 17:46:01 PAGE 3   

 117          
 118          void down_key()
 119          {
 120   1          char down_num = 0;
 121   1          down_num = power_num;
 122   1          buzzer=buzzer_bit=0;
 123   1          down_num -= 5;
 124   1          if(down_num<0)
 125   1          {
 126   2              down_num = 0;
 127   2          }
 128   1          power_num = down_num;
 129   1          power_crl(power_num);
 130   1          num_dis(power_num);
 131   1          
 132   1          eeprom_data_write();
 133   1      }
 134          
 135          void channel_choose()
 136          {
 137   1          buzzer=buzzer_bit=0;
 138   1          
 139   1          if(channel_num==7)
 140   1          {
 141   2              channel_num = 1;
 142   2          }
 143   1          else
 144   1          {
 145   2              channel_num += 1;
 146   2          }
 147   1          channel_dis(channel_num);
 148   1          
 149   1          eeprom_data_write();
 150   1      }
 151          
 152          void mode_choose()
 153          {
 154   1          buzzer=buzzer_bit=0;
 155   1          if(mode_num==5)
 156   1          {
 157   2              mode_num = 1;
 158   2          }
 159   1          else
 160   1          {
 161   2              mode_num += 1;
 162   2          }
 163   1          
 164   1          lcd_clear();
 165   1          mode_dis(DIS_ON);
 166   1          num_dis(mode_num);
 167   1          percentage_dis(DIS_OFF);
 168   1          
 169   1          eeprom_data_read(mode_num);
 170   1          
 171   1          delay_ms(1000);
 172   1          
 173   1          mode_dis(DIS_OFF);
 174   1          sun_dis(DIS_ON);
 175   1          printf("THE value of mode_info[0] is %d \r\n",(int)mode_info[0]);
 176   1          printf("THE value of mode_info[2] is %d \r\n",(int)mode_info[2]);
 177   1          printf("THE value of mode_info[3] is %d \r\n",(int)mode_info[3]);
 178   1          channel_dis(mode_info[0]);
C51 COMPILER V9.60.7.0   KEY                                                               11/20/2024 17:46:01 PAGE 4   

 179   1          num_dis(mode_info[3]);
 180   1          percentage_dis(DIS_ON);
 181   1          wind_dis(mode_info[2]);
 182   1          
 183   1          eeprom_mode_save();
 184   1       
 185   1      }
 186          
 187          void power_key()
 188          {
 189   1         lcd_clear();
 190   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    499    ----
   CONSTANT SIZE    =    105    ----
   XDATA SIZE       =      4    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
